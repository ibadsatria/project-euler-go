package main

import (
	"fmt"
)

// # https://projecteuler.net/problem=2
// # Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// # By starting with 1 and 2, the first 10 terms will be:
// # 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// # By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// # find the sum of the even-valued terms.

func fib(n int) int {
	if n == 0 || n == 1 {
		return 1
	}

	return fib(n-1) + fib(n-2)
}

func main() {
	var sumEvenFib int
	i := 0
	fmt.Print("[")
	for {
		if sumEvenFib >= 4000000 {
			break
		}

		fib := fib(i)
		fmt.Printf("%d ", fib)

		if fib%2 == 0 {
			sumEvenFib = sumEvenFib + fib
		}
		i++
	}
	fmt.Print("]")

	fmt.Println(sumEvenFib)
}
